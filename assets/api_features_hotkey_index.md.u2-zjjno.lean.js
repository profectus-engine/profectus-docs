import{_ as i,c as a,a0 as e,o as t}from"./chunks/framework.P9qPzDnn.js";const D=JSON.parse('{"title":"features/hotkey","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/features/hotkey/index.md","filePath":"api/features/hotkey/index.md","lastUpdated":null}'),n={name:"api/features/hotkey/index.md"};function h(l,s,k,r,p,o){return t(),a("div",null,s[0]||(s[0]=[e(`<p><a href="./../../">Profectus</a> / features/hotkey</p><h1 id="features-hotkey" tabindex="-1">features/hotkey <a class="header-anchor" href="#features-hotkey" aria-label="Permalink to &quot;features/hotkey&quot;">​</a></h1><p>This feature represents an action the player can do by performing a hotkey. It will appear in the information modal for easy player reference.</p><p>Typically the action should already be performable by pressing a clickable, so that mobile users can perform the action. For this use case, setting up the hotkey should look like this:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-palenight material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;"> hotkey </span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> createHotkey</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#F07178;--shiki-dark:#F07178;">    description</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">Clicks some button</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#F07178;--shiki-dark:#F07178;">    key</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">A</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#F07178;--shiki-dark:#F07178;">    onPress</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;"> clickable</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">onClick</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">!,</span></span>
<span class="line"><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">    enabled</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> ()</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> isVisible</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">(clickable</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">visibility </span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">??</span><span style="--shiki-light:#FF9CAC;--shiki-dark:#FF9CAC;"> true</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">))</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./interfaces/Hotkey">Hotkey</a></li><li><a href="./interfaces/HotkeyOptions">HotkeyOptions</a></li></ul><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h3><ul><li><a href="./variables/hotkeys">hotkeys</a></li><li><a href="./variables/HotkeyType">HotkeyType</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./functions/createHotkey">createHotkey</a></li></ul>`,12)]))}const d=i(n,[["render",h]]);export{D as __pageData,d as default};
