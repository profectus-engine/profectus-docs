import{_ as a,c as r,a0 as t,o as l}from"./chunks/framework.P9qPzDnn.js";const y=JSON.parse('{"title":"Variable: layers","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/game/layers/variables/layers.md","filePath":"api/game/layers/variables/layers.md","lastUpdated":null}'),s={name:"api/game/layers/variables/layers.md"};function o(i,e,n,c,d,p){return l(),r("div",null,e[0]||(e[0]=[t('<p><a href="./../../../">Profectus</a> / <a href="./../">game/layers</a> / layers</p><h1 id="variable-layers" tabindex="-1">Variable: layers <a class="header-anchor" href="#variable-layers" aria-label="Permalink to &quot;Variable: layers&quot;">​</a></h1><blockquote><p><code>const</code> <strong>layers</strong>: <a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type" target="_blank" rel="noreferrer"><code>Record</code></a>&lt;<code>string</code>, <a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype" target="_blank" rel="noreferrer"><code>Readonly</code></a>&lt;<a href="./../interfaces/Layer"><code>Layer</code></a>&gt;&gt;</p></blockquote><p>A reference to all the current layers. It is shallow reactive so it will update when layers are added or removed, but not interfere with the existing refs within each layer.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://code.incremental.social/profectus/Profectus/src/branch/main/src/game/layers.tsx#L74" target="_blank" rel="noreferrer">profectus/src/game/layers.tsx:74</a></p>',6)]))}const f=a(s,[["render",o]]);export{y as __pageData,f as default};
