import{_ as t,c as a,a0 as r,o as n}from"./chunks/framework.P9qPzDnn.js";const p=JSON.parse('{"title":"Function: getUniqueID()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/features/feature/functions/getUniqueID.md","filePath":"api/features/feature/functions/getUniqueID.md","lastUpdated":null}'),i={name:"api/features/feature/functions/getUniqueID.md"};function o(s,e,u,c,d,f){return n(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../../../">Profectus</a> / <a href="./../">features/feature</a> / getUniqueID</p><h1 id="function-getuniqueid" tabindex="-1">Function: getUniqueID() <a class="header-anchor" href="#function-getuniqueid" aria-label="Permalink to &quot;Function: getUniqueID()&quot;">​</a></h1><blockquote><p><strong>getUniqueID</strong>(<code>prefix</code>): <code>string</code></p></blockquote><p>Gets a unique ID to give to each feature, used for any sort of system that needs to identify elements in the DOM rather than references to the feature itself. (For example, branches) IDs are guaranteed unique, but <em>NOT</em> persistent - they likely will change between updates.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="prefix" tabindex="-1">prefix <a class="header-anchor" href="#prefix" aria-label="Permalink to &quot;prefix&quot;">​</a></h3><p><code>string</code> = <code>&quot;feature-&quot;</code></p><p>A string to prepend to the id to make it more readable in the inspector tools</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://code.incremental.social/profectus/Profectus/src/branch/main/src/features/feature.ts#L12" target="_blank" rel="noreferrer">profectus/src/features/feature.ts:12</a></p>',12)]))}const h=t(i,[["render",o]]);export{p as __pageData,h as default};
