import{_ as t,c as a,a0 as s,o as n}from"./chunks/framework.P9qPzDnn.js";const u=JSON.parse('{"title":"Function: loadSettings()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/game/settings/functions/loadSettings.md","filePath":"api/game/settings/functions/loadSettings.md","lastUpdated":null}'),o={name:"api/game/settings/functions/loadSettings.md"};function i(r,e,d,l,c,f){return n(),a("div",null,e[0]||(e[0]=[s('<p><a href="./../../../">Profectus</a> / <a href="./../">game/settings</a> / loadSettings</p><h1 id="function-loadsettings" tabindex="-1">Function: loadSettings() <a class="header-anchor" href="#function-loadsettings" aria-label="Permalink to &quot;Function: loadSettings()&quot;">​</a></h1><blockquote><p><strong>loadSettings</strong>(): <code>void</code></p></blockquote><p>Loads the player settings from localStorage. Calls the <a href="./../../events/interfaces/GlobalEvents#loadsettings">game/events.GlobalEvents.loadSettings</a> event for custom properties to be included. Custom properties should be added by the file they relate to, so they won&#39;t be included if the file is tree shaken away. Custom properties should also register the field to modify said setting using <a href="./registerSettingField">registerSettingField</a>.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://code.incremental.social/profectus/Profectus/src/branch/main/src/game/settings.ts#L84" target="_blank" rel="noreferrer">profectus/src/game/settings.ts:84</a></p>',8)]))}const p=t(o,[["render",i]]);export{u as __pageData,p as default};
