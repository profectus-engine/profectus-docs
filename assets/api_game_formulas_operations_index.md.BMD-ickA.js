import{_ as e,c as t,a0 as n,o as a}from"./chunks/framework.P9qPzDnn.js";const g=JSON.parse('{"title":"game/formulas/operations","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/game/formulas/operations/index.md","filePath":"api/game/formulas/operations/index.md","lastUpdated":null}'),r={name:"api/game/formulas/operations/index.md"};function l(o,i,f,s,u,h){return a(),t("div",null,i[0]||(i[0]=[n('<p><a href="./../../../">Profectus</a> / game/formulas/operations</p><h1 id="game-formulas-operations" tabindex="-1">game/formulas/operations <a class="header-anchor" href="#game-formulas-operations" aria-label="Permalink to &quot;game/formulas/operations&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./functions/applySubstitutionDiv">applySubstitutionDiv</a></li><li><a href="./functions/applySubstitutionMul">applySubstitutionMul</a></li><li><a href="./functions/applySubstitutionNeg">applySubstitutionNeg</a></li><li><a href="./functions/createPassthroughBinaryFormula">createPassthroughBinaryFormula</a></li><li><a href="./functions/integrateAcos">integrateAcos</a></li><li><a href="./functions/integrateAcosh">integrateAcosh</a></li><li><a href="./functions/integrateAdd">integrateAdd</a></li><li><a href="./functions/integrateAsin">integrateAsin</a></li><li><a href="./functions/integrateAsinh">integrateAsinh</a></li><li><a href="./functions/integrateAtan">integrateAtan</a></li><li><a href="./functions/integrateAtanh">integrateAtanh</a></li><li><a href="./functions/integrateCos">integrateCos</a></li><li><a href="./functions/integrateCosh">integrateCosh</a></li><li><a href="./functions/integrateDiv">integrateDiv</a></li><li><a href="./functions/integrateExp">integrateExp</a></li><li><a href="./functions/integrateInnerAdd">integrateInnerAdd</a></li><li><a href="./functions/integrateInnerSub">integrateInnerSub</a></li><li><a href="./functions/integrateLn">integrateLn</a></li><li><a href="./functions/integrateLog">integrateLog</a></li><li><a href="./functions/integrateLog10">integrateLog10</a></li><li><a href="./functions/integrateLog2">integrateLog2</a></li><li><a href="./functions/integrateMul">integrateMul</a></li><li><a href="./functions/integrateNeg">integrateNeg</a></li><li><a href="./functions/integratePow">integratePow</a></li><li><a href="./functions/integratePow10">integratePow10</a></li><li><a href="./functions/integratePowBase">integratePowBase</a></li><li><a href="./functions/integrateRecip">integrateRecip</a></li><li><a href="./functions/integrateRoot">integrateRoot</a></li><li><a href="./functions/integrateSin">integrateSin</a></li><li><a href="./functions/integrateSinh">integrateSinh</a></li><li><a href="./functions/integrateSub">integrateSub</a></li><li><a href="./functions/integrateTan">integrateTan</a></li><li><a href="./functions/integrateTanh">integrateTanh</a></li><li><a href="./functions/invertAcos">invertAcos</a></li><li><a href="./functions/invertAcosh">invertAcosh</a></li><li><a href="./functions/invertAdd">invertAdd</a></li><li><a href="./functions/invertAsin">invertAsin</a></li><li><a href="./functions/invertAsinh">invertAsinh</a></li><li><a href="./functions/invertAtan">invertAtan</a></li><li><a href="./functions/invertAtanh">invertAtanh</a></li><li><a href="./functions/invertCos">invertCos</a></li><li><a href="./functions/invertCosh">invertCosh</a></li><li><a href="./functions/invertDiv">invertDiv</a></li><li><a href="./functions/invertExp">invertExp</a></li><li><a href="./functions/invertIteratedExp">invertIteratedExp</a></li><li><a href="./functions/invertLambertw">invertLambertw</a></li><li><a href="./functions/invertLayeradd">invertLayeradd</a></li><li><a href="./functions/invertLn">invertLn</a></li><li><a href="./functions/invertLog">invertLog</a></li><li><a href="./functions/invertLog10">invertLog10</a></li><li><a href="./functions/invertLog2">invertLog2</a></li><li><a href="./functions/invertMul">invertMul</a></li><li><a href="./functions/invertNeg">invertNeg</a></li><li><a href="./functions/invertPassthrough">invertPassthrough</a></li><li><a href="./functions/invertPow">invertPow</a></li><li><a href="./functions/invertPow10">invertPow10</a></li><li><a href="./functions/invertPowBase">invertPowBase</a></li><li><a href="./functions/invertRecip">invertRecip</a></li><li><a href="./functions/invertRoot">invertRoot</a></li><li><a href="./functions/invertSin">invertSin</a></li><li><a href="./functions/invertSinh">invertSinh</a></li><li><a href="./functions/invertSlog">invertSlog</a></li><li><a href="./functions/invertSsqrt">invertSsqrt</a></li><li><a href="./functions/invertSub">invertSub</a></li><li><a href="./functions/invertTan">invertTan</a></li><li><a href="./functions/invertTanh">invertTanh</a></li><li><a href="./functions/invertTetrate">invertTetrate</a></li><li><a href="./functions/iteratedexp">iteratedexp</a></li><li><a href="./functions/iteratedLog">iteratedLog</a></li><li><a href="./functions/layeradd">layeradd</a></li><li><a href="./functions/passthrough">passthrough</a></li><li><a href="./functions/pentate">pentate</a></li><li><a href="./functions/slog">slog</a></li><li><a href="./functions/tetrate">tetrate</a></li></ul>',5)]))}const v=e(r,[["render",l]]);export{g as __pageData,v as default};
