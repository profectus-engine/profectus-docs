import{_ as t,c as e,o as a,a as o}from"./app.ab34650d.js";const u=JSON.parse('{"title":"Module: game/notifications","description":"","frontmatter":{"editLink":false},"headers":[{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"createDismissableNotify","slug":"createdismissablenotify"},{"level":3,"title":"getHighNotifyStyle","slug":"gethighnotifystyle"},{"level":3,"title":"getNotifyStyle","slug":"getnotifystyle"}],"relativePath":"api/modules/game/notifications.md","lastUpdated":null}'),d={name:"api/modules/game/notifications.md"},l=o('<h1 id="module-game-notifications" tabindex="-1">Module: game/notifications <a class="header-anchor" href="#module-game-notifications" aria-hidden="true">#</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><h3 id="createdismissablenotify" tabindex="-1">createDismissableNotify <a class="header-anchor" href="#createdismissablenotify" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createDismissableNotify</strong>(<code>element</code>, <code>shouldNotify</code>): <code>Ref</code>&lt;<code>boolean</code>&gt;</p><p>Create a boolean ref that will automatically be set based on the given condition, but also dismissed when hovering over a given element, typically the element where acting upon the notification would take place.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>element</code></td><td style="text-align:left;"><a href="../../interfaces/util/vue.VueFeature"><code>VueFeature</code></a></td><td style="text-align:left;">The element that will dismiss the notification on hover.</td></tr><tr><td style="text-align:left;"><code>shouldNotify</code></td><td style="text-align:left;"><code>Ref</code>&lt;<code>boolean</code>&gt; | () =&gt; <code>boolean</code></td><td style="text-align:left;">A function or ref that determines if the notif should be active currently or not.</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>Ref</code>&lt;<code>boolean</code>&gt;</p><hr><h3 id="gethighnotifystyle" tabindex="-1">getHighNotifyStyle <a class="header-anchor" href="#gethighnotifystyle" aria-hidden="true">#</a></h3><p>\u25B8 <strong>getHighNotifyStyle</strong>(): <code>Object</code></p><p>Utility function to call <a href="./notifications.html#getnotifystyle">getNotifyStyle</a> with &quot;high importance&quot; parameters.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>borderColor</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>boxShadow</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>transform</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>zIndex</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><hr><h3 id="getnotifystyle" tabindex="-1">getNotifyStyle <a class="header-anchor" href="#getnotifystyle" aria-hidden="true">#</a></h3><p>\u25B8 <strong>getNotifyStyle</strong>(<code>color?</code>, <code>strength?</code>): <code>Object</code></p><p>Gives a CSSProperties object that makes an object glow, to bring focus to it. Default values are for a &quot;soft&quot; white notif effect.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&quot;white&quot;</code></td><td style="text-align:left;">The color of the glow effect.</td></tr><tr><td style="text-align:left;"><code>strength</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&quot;8px&quot;</code></td><td style="text-align:left;">The strength of the glow effect - affects its spread.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>borderColor</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>boxShadow</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>transform</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>zIndex</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table>',25),i=[l];function n(r,s,c,h,f,g){return a(),e("div",null,i)}var x=t(d,[["render",n]]);export{u as __pageData,x as default};
