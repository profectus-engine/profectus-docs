import{_ as e,c as t,o as r,a}from"./app.7cfe4cf0.js";const b='{"title":"Interface: ScalingFunction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"currentAt","slug":"currentat"},{"level":3,"title":"currentGain","slug":"currentgain"},{"level":3,"title":"nextAt","slug":"nextat"}],"relativePath":"api/interfaces/features/conversion.ScalingFunction.md"}',n={},o=a('<h1 id="interface-scalingfunction" tabindex="-1">Interface: ScalingFunction <a class="header-anchor" href="#interface-scalingfunction" aria-hidden="true">#</a></h1><p><a href="./../../modules/features/conversion.html">features/conversion</a>.ScalingFunction</p><p>A collection of functions that allow a conversion to scale the amount of resources gained based on the input resource. This typically shouldn&#39;t be created directly. Instead use one of the scaling function constructors.</p><p><strong><code>see</code></strong> <a href="./../../modules/features/conversion.html#createlinearscaling">createLinearScaling</a>.</p><p><strong><code>see</code></strong> <a href="./../../modules/features/conversion.html#createpolynomialscaling">createPolynomialScaling</a>.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="currentat" tabindex="-1">currentAt <a class="header-anchor" href="#currentat" aria-hidden="true">#</a></h3><p>\u25B8 <strong>currentAt</strong>(<code>conversion</code>): <a href="./../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a></p><p>Calculates the amount of the input resource that is required for the current value of <code>conversion.currentGain</code>. Note that <code>conversion.currentGain</code> has been modified by <code>conversion.gainModifier</code>, so you will need to revert that as appropriate. The conversion is responsible for rounding up the amount as appropriate. The returned value should not be below 0.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>conversion</code></td><td style="text-align:left;"><a href="./../../modules/features/conversion.html#genericconversion"><code>GenericConversion</code></a></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><a href="./../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/0b8210c/src/features/conversion.ts#L233" target="_blank" rel="noopener noreferrer">profectus/src/features/conversion.ts:233</a></p><hr><h3 id="currentgain" tabindex="-1">currentGain <a class="header-anchor" href="#currentgain" aria-hidden="true">#</a></h3><p>\u25B8 <strong>currentGain</strong>(<code>conversion</code>): <a href="./../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a></p><p>Calculates the amount of the output resource a conversion should be able to currently produce. This should be based off of <code>conversion.baseResource.value</code>. The conversion is responsible for applying the gainModifier, so this function should be un-modified. It does not need to be clamped or rounded.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>conversion</code></td><td style="text-align:left;"><a href="./../../modules/features/conversion.html#genericconversion"><code>GenericConversion</code></a></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><a href="./../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/0b8210c/src/features/conversion.ts#L226" target="_blank" rel="noopener noreferrer">profectus/src/features/conversion.ts:226</a></p><hr><h3 id="nextat" tabindex="-1">nextAt <a class="header-anchor" href="#nextat" aria-hidden="true">#</a></h3><p>\u25B8 <strong>nextAt</strong>(<code>conversion</code>): <a href="./../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a></p><p>Calculates the amount of the input resource that would be required for the current value of <code>conversion.currentGain</code> to increase. Note that <code>conversion.currentGain</code> has been modified by <code>conversion.gainModifier</code>, so you will need to revert that as appropriate. The conversion is responsible for rounding up the amount as appropriate. The returned value should not be below 0.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>conversion</code></td><td style="text-align:left;"><a href="./../../modules/features/conversion.html#genericconversion"><code>GenericConversion</code></a></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><a href="./../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/0b8210c/src/features/conversion.ts#L240" target="_blank" rel="noopener noreferrer">profectus/src/features/conversion.ts:240</a></p>',35),i=[o];function c(s,d,l,h,u,f){return r(),t("div",null,i)}var m=e(n,[["render",c]]);export{b as __pageData,m as default};
