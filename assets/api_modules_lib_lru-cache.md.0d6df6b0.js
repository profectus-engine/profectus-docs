import{_ as e,c as t,o as d,N as c}from"./chunks/framework.0799945b.js";const b=JSON.parse('{"title":"Module: lib/lru-cache","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/modules/lib/lru-cache.md","lastUpdated":null}'),a={name:"api/modules/lib/lru-cache.md"},o=c('<h1 id="module-lib-lru-cache" tabindex="-1">Module: lib/lru-cache <a class="header-anchor" href="#module-lib-lru-cache" aria-label="Permalink to &quot;Module: lib/lru-cache&quot;">​</a></h1><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><h3 id="lrucache" tabindex="-1">LRUCache <a class="header-anchor" href="#lrucache" aria-label="Permalink to &quot;LRUCache&quot;">​</a></h3><p>• <strong>LRUCache</strong>&lt;<code>K</code>, <code>V</code>&gt;: <code>Object</code></p><p>A LRU cache intended for caching pure functions.</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>V</code></td></tr></tbody></table><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>constructor</code></td><td style="text-align:left;">&lt;K, V&gt;(<code>maxSize</code>: <code>number</code>) =&gt; <a href="./lru-cache#lrucache"><code>LRUCache</code></a>&lt;<code>K</code>, <code>V</code>&gt;</td></tr><tr><td style="text-align:left;"><code>first</code></td><td style="text-align:left;"><code>undefined</code> | <code>ListNode</code>&lt;<code>K</code>, <code>V</code>&gt;</td></tr><tr><td style="text-align:left;"><code>last</code></td><td style="text-align:left;"><code>undefined</code> | <code>ListNode</code>&lt;<code>K</code>, <code>V</code>&gt;</td></tr><tr><td style="text-align:left;"><code>map</code></td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map" target="_blank" rel="noreferrer"><code>Map</code></a>&lt;<code>K</code>, <code>ListNode</code>&lt;<code>K</code>, <code>V</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>maxSize</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>get size()</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>get</code></td><td style="text-align:left;">(<code>key</code>: <code>K</code>) =&gt; <code>undefined</code> | <code>V</code></td></tr><tr><td style="text-align:left;"><code>set</code></td><td style="text-align:left;">(<code>key</code>: <code>K</code>, <code>value</code>: <code>V</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/c386ace/src/lib/lru-cache.ts#L4" target="_blank" rel="noreferrer">profectus/src/lib/lru-cache.ts:4</a></p>',10),l=[o];function r(s,i,n,h,f,u){return d(),t("div",null,l)}const p=e(a,[["render",r]]);export{b as __pageData,p as default};
