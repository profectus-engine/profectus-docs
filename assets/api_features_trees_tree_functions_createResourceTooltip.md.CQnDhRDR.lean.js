import{_ as r,c as t,a0 as a,o}from"./chunks/framework.P9qPzDnn.js";const p=JSON.parse('{"title":"Function: createResourceTooltip()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/features/trees/tree/functions/createResourceTooltip.md","filePath":"api/features/trees/tree/functions/createResourceTooltip.md","lastUpdated":null}'),c={name:"api/features/trees/tree/functions/createResourceTooltip.md"};function s(i,e,n,u,d,l){return o(),t("div",null,e[0]||(e[0]=[a('<p><a href="./../../../../">Profectus</a> / <a href="./../">features/trees/tree</a> / createResourceTooltip</p><h1 id="function-createresourcetooltip" tabindex="-1">Function: createResourceTooltip() <a class="header-anchor" href="#function-createresourcetooltip" aria-label="Permalink to &quot;Function: createResourceTooltip()&quot;">​</a></h1><blockquote><p><strong>createResourceTooltip</strong>(<code>resource</code>, <code>requiredResource</code>, <code>requirement</code>): () =&gt; <code>string</code></p></blockquote><p>Utility for creating a tooltip for a tree node that displays a resource-based unlock requirement, and after unlock shows the amount of another resource. It sounds oddly specific, but comes up a lot.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="resource" tabindex="-1">resource <a class="header-anchor" href="#resource" aria-label="Permalink to &quot;resource&quot;">​</a></h3><p><a href="./../../../resources/resource/interfaces/Resource"><code>Resource</code></a></p><h3 id="requiredresource" tabindex="-1">requiredResource <a class="header-anchor" href="#requiredresource" aria-label="Permalink to &quot;requiredResource&quot;">​</a></h3><p><code>null</code> | <a href="./../../../resources/resource/interfaces/Resource"><code>Resource</code></a></p><h3 id="requirement" tabindex="-1">requirement <a class="header-anchor" href="#requirement" aria-label="Permalink to &quot;requirement&quot;">​</a></h3><p><a href="https://vuejs.org/api/utility-types.html#maybereforgetter" target="_blank" rel="noreferrer"><code>MaybeRefOrGetter</code></a>&lt;<a href="./../../../../lib/break_eternity/type-aliases/DecimalSource"><code>DecimalSource</code></a>&gt; = <code>0</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Function</code></p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>string</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://code.incremental.social/profectus/Profectus/src/branch/main/src/features/trees/tree.tsx#L335" target="_blank" rel="noreferrer">profectus/src/features/trees/tree.tsx:335</a></p>',17)]))}const f=r(c,[["render",s]]);export{p as __pageData,f as default};
