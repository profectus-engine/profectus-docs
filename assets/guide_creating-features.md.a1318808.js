import{_ as e,c as t,o as a,a as i}from"./app.189352af.js";const f=JSON.parse('{"title":"Creating Features","description":"","frontmatter":{},"headers":[],"relativePath":"guide/creating-features.md","lastUpdated":1657804868000}'),n={name:"guide/creating-features.md"},o=i('<h1 id="creating-features" tabindex="-1">Creating Features <a class="header-anchor" href="#creating-features" aria-hidden="true">#</a></h1><p># TODO</p><p>Because typescript does not emit JS, if a value is supposed to be a function it is impossible to determine if a given function is the intended value or a function that returns the actual value. For this reason it is not recommended for any feature types to include properties that are <code>Computable&lt;Function&gt;</code>s, and all functions <em>will</em> be wrapped in <code>computed</code>. The notable exception to this is <a href="./coercable.html#http://localhost:3000/guide/coercable.html#render-functions-jsx">JSX</a>, which uses a utility function to mark that a function should not be wrapped.</p>',3),r=[o];function s(c,d,u,p,l,h){return a(),t("div",null,r)}var m=e(n,[["render",s]]);export{f as __pageData,m as default};
