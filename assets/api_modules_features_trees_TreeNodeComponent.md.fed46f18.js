import{_ as t,c as e,o as r,N as l}from"./chunks/framework.0799945b.js";const x=JSON.parse('{"title":"Component: TreeNode","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/modules/features/trees/TreeNodeComponent.md","lastUpdated":null}'),o={name:"api/modules/features/trees/TreeNodeComponent.md"},p=l('<h1 id="component-treenode" tabindex="-1">Component: TreeNode <a class="header-anchor" href="#component-treenode" aria-label="Permalink to &quot;Component: TreeNode&quot;">​</a></h1><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Types</th></tr></thead><tbody><tr><td style="text-align:left;"><pre>display</pre></td><td style="text-align:left;"><pre>processedPropType&lt;CoercableComponent&gt;(Object, String, Function)</pre></td></tr><tr><td style="text-align:left;"><pre>visibility</pre>*</td><td style="text-align:left;"><pre>processedPropType&lt;Visibility | boolean&gt;(Number, Boolean)</pre></td></tr><tr><td style="text-align:left;"><pre>style</pre></td><td style="text-align:left;"><pre>processedPropType&lt;StyleValue&gt;(String, Object, Array)</pre></td></tr><tr><td style="text-align:left;"><pre>classes</pre></td><td style="text-align:left;"><pre>processedPropType&lt;Record&lt;string, boolean&gt;&gt;(Object)</pre></td></tr><tr><td style="text-align:left;"><pre>onClick</pre></td><td style="text-align:left;"><pre>(e?: MouseEvent | TouchEvent) =&gt; void</pre></td></tr><tr><td style="text-align:left;"><pre>onHold</pre></td><td style="text-align:left;"><pre>VoidFunction</pre></td></tr><tr><td style="text-align:left;"><pre>color</pre></td><td style="text-align:left;"><pre>processedPropType&lt;string&gt;(String)</pre></td></tr><tr><td style="text-align:left;"><pre>glowColor</pre></td><td style="text-align:left;"><pre>processedPropType&lt;string&gt;(String)</pre></td></tr><tr><td style="text-align:left;"><pre>canClick</pre>*</td><td style="text-align:left;"><pre>processedPropType&lt;boolean&gt;(Boolean)</pre></td></tr><tr><td style="text-align:left;"><pre>mark</pre></td><td style="text-align:left;"><pre>processedPropType&lt;boolean | string&gt;(Boolean, String)</pre></td></tr><tr><td style="text-align:left;"><pre>id</pre>*</td><td style="text-align:left;"><pre>string</pre></td></tr></tbody></table>',3),n=[p];function d(a,s,i,c,g,y){return r(),e("div",null,n)}const _=t(o,[["render",d]]);export{x as __pageData,_ as default};
