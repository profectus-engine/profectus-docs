import{_ as e,c as t,o as a,a as d}from"./app.ab34650d.js";const p=JSON.parse('{"title":"Module: util/common","description":"","frontmatter":{"editLink":false},"headers":[{"level":2,"title":"Enumerations","slug":"enumerations"},{"level":2,"title":"Type Aliases","slug":"type-aliases"},{"level":3,"title":"ArrayElements","slug":"arrayelements"},{"level":3,"title":"WithRequired","slug":"withrequired"},{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"camelToTitle","slug":"cameltotitle"},{"level":3,"title":"isFunction","slug":"isfunction"}],"relativePath":"api/modules/util/common.md","lastUpdated":null}'),r={name:"api/modules/util/common.md"},o=d('<h1 id="module-util-common" tabindex="-1">Module: util/common <a class="header-anchor" href="#module-util-common" aria-hidden="true">#</a></h1><h2 id="enumerations" tabindex="-1">Enumerations <a class="header-anchor" href="#enumerations" aria-hidden="true">#</a></h2><ul><li><a href="../../enums/util/common.Direction">Direction</a></li></ul><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a></h2><h3 id="arrayelements" tabindex="-1">ArrayElements <a class="header-anchor" href="#arrayelements" aria-hidden="true">#</a></h3><p>\u01AC <strong>ArrayElements</strong>&lt;<code>T</code>&gt;: <code>T</code> extends <code>ReadonlyArray</code>&lt;infer S&gt; ? <code>S</code> : <code>never</code></p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>ReadonlyArray</code>&lt;<code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/util/common.ts#L3" target="_blank" rel="noopener noreferrer">profectus/src/util/common.ts:3</a></p><hr><h3 id="withrequired" tabindex="-1">WithRequired <a class="header-anchor" href="#withrequired" aria-hidden="true">#</a></h3><p>\u01AC <strong>WithRequired</strong>&lt;<code>T</code>, <code>K</code>&gt;: <code>T</code> &amp; { [<code>P</code> in <code>K</code>]-?: <code>T</code>[<code>P</code>] }</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>K</code></td><td style="text-align:left;">extends keyof <code>T</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/util/common.ts#L1" target="_blank" rel="noopener noreferrer">profectus/src/util/common.ts:1</a></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><h3 id="cameltotitle" tabindex="-1">camelToTitle <a class="header-anchor" href="#cameltotitle" aria-hidden="true">#</a></h3><p>\u25B8 <strong>camelToTitle</strong>(<code>camel</code>): <code>string</code></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>camel</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>string</code></p><hr><h3 id="isfunction" tabindex="-1">isFunction <a class="header-anchor" href="#isfunction" aria-hidden="true">#</a></h3><p>\u25B8 <strong>isFunction</strong>&lt;<code>T</code>, <code>S</code>, <code>R</code>&gt;(<code>functionOrValue</code>): <code>functionOrValue</code> is (...<code>args</code>: <code>S</code>) =&gt; <code>T</code></p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends readonly <code>unknown</code>[]</td></tr><tr><td style="text-align:left;"><code>R</code></td><td style="text-align:left;"><code>R</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>functionOrValue</code></td><td style="text-align:left;"><code>R</code> | (...<code>args</code>: <code>S</code>) =&gt; <code>T</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>functionOrValue</code> is (...<code>args</code>: <code>S</code>) =&gt; <code>T</code></p>',33),n=[o];function l(i,c,s,h,u,f){return a(),t("div",null,n)}var y=e(r,[["render",l]]);export{p as __pageData,y as default};
