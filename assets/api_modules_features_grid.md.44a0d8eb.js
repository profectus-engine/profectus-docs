import{_ as e,c as t,o as d,N as o}from"./chunks/framework.0799945b.js";const u=JSON.parse('{"title":"Module: features/grids/grid","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/modules/features/grid.md","lastUpdated":null}'),a={name:"api/modules/features/grid.md"},l=o('<h1 id="module-features-grids-grid" tabindex="-1">Module: features/grids/grid <a class="header-anchor" href="#module-features-grids-grid" aria-label="Permalink to &quot;Module: features/grids/grid&quot;">​</a></h1><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><h3 id="basegrid" tabindex="-1">BaseGrid <a class="header-anchor" href="#basegrid" aria-label="Permalink to &quot;BaseGrid&quot;">​</a></h3><p>• <strong>BaseGrid</strong>: <code>Object</code></p><p>The properties that are added onto a processed BoardOptions to create a Board.</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>[Component]</code></td><td style="text-align:left;"><a href="./feature#genericcomponent"><code>GenericComponent</code></a></td><td style="text-align:left;">The Vue component used to render this feature.</td></tr><tr><td style="text-align:left;"><code>[GatherProps]</code></td><td style="text-align:left;">() =&gt; <a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type" target="_blank" rel="noreferrer"><code>Record</code></a>&lt;<code>string</code>, <code>unknown</code>&gt;</td><td style="text-align:left;">A function to gather the props the vue component requires for this feature.</td></tr><tr><td style="text-align:left;"><code>cellState</code></td><td style="text-align:left;"><a href="./../game/persistence#persistent"><code>Persistent</code></a>&lt;<a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type" target="_blank" rel="noreferrer"><code>Record</code></a>&lt;<code>string</code> | <code>number</code>, <a href="./../game/persistence#state"><code>State</code></a>&gt;&gt;</td><td style="text-align:left;">The persistent state of this grid, which is a dictionary of cell states.</td></tr><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;"><a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type" target="_blank" rel="noreferrer"><code>Record</code></a>&lt;<code>string</code> | <code>number</code>, <a href="./grid#gridcell"><code>GridCell</code></a>&gt;</td><td style="text-align:left;">A dictionary of cells within this grid.</td></tr><tr><td style="text-align:left;"><code>getID</code></td><td style="text-align:left;">(<code>id</code>: <code>string</code> | <code>number</code>, <code>state</code>: <a href="./../game/persistence#state"><code>State</code></a>) =&gt; <code>string</code></td><td style="text-align:left;">Get the auto-generated ID for identifying a specific cell of this grid that appears in the DOM. Will not persist between refreshes or updates.</td></tr><tr><td style="text-align:left;"><code>getState</code></td><td style="text-align:left;">(<code>id</code>: <code>string</code> | <code>number</code>) =&gt; <a href="./../game/persistence#state"><code>State</code></a></td><td style="text-align:left;">Get the persistent state of the given cell.</td></tr><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">An auto-generated ID for identifying features that appear in the DOM. Will not persist between refreshes or updates.</td></tr><tr><td style="text-align:left;"><code>setState</code></td><td style="text-align:left;">(<code>id</code>: <code>string</code> | <code>number</code>, <code>state</code>: <a href="./../game/persistence#state"><code>State</code></a>) =&gt; <code>void</code></td><td style="text-align:left;">Set the persistent state of the given cell.</td></tr><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;">typeof <a href="./grid#gridtype"><code>GridType</code></a></td><td style="text-align:left;">A symbol that helps identify features of the same type.</td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L254" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:254</a></p><hr><h3 id="gridcell" tabindex="-1">GridCell <a class="header-anchor" href="#gridcell" aria-label="Permalink to &quot;GridCell&quot;">​</a></h3><p>• <strong>GridCell</strong>: <code>Object</code></p><p>Represents a cell within a grid. These properties will typically be accessed via a cell proxy that calls functions on the grid to get the properties for a specific cell.</p><p><strong><code>See</code></strong></p><p>createGridProxy</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>canClick</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Whether this cell can be clicked.</td></tr><tr><td style="text-align:left;"><code>classes?</code></td><td style="text-align:left;"><a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type" target="_blank" rel="noreferrer"><code>Record</code></a>&lt;<code>string</code>, <code>boolean</code>&gt;</td><td style="text-align:left;">Dictionary of CSS classes to apply to this feature.</td></tr><tr><td style="text-align:left;"><code>display</code></td><td style="text-align:left;"><a href="./feature#coercablecomponent"><code>CoercableComponent</code></a></td><td style="text-align:left;">The main text that appears in the display.</td></tr><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A unique identifier for the grid cell.</td></tr><tr><td style="text-align:left;"><code>onClick?</code></td><td style="text-align:left;">(<code>e?</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent" target="_blank" rel="noreferrer"><code>MouseEvent</code></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent" target="_blank" rel="noreferrer"><code>TouchEvent</code></a>) =&gt; <code>void</code></td><td style="text-align:left;">A function that is called when the cell is clicked.</td></tr><tr><td style="text-align:left;"><code>onHold?</code></td><td style="text-align:left;"><code>VoidFunction</code></td><td style="text-align:left;">A function that is called when the cell is held down.</td></tr><tr><td style="text-align:left;"><code>startState</code></td><td style="text-align:left;"><a href="./../game/persistence#state"><code>State</code></a></td><td style="text-align:left;">The initial persistent state of this cell.</td></tr><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><a href="./../game/persistence#state"><code>State</code></a></td><td style="text-align:left;">The persistent state of this cell.</td></tr><tr><td style="text-align:left;"><code>style?</code></td><td style="text-align:left;"><a href="./feature#stylevalue"><code>StyleValue</code></a></td><td style="text-align:left;">CSS to apply to this feature.</td></tr><tr><td style="text-align:left;"><code>title?</code></td><td style="text-align:left;"><a href="./feature#coercablecomponent"><code>CoercableComponent</code></a></td><td style="text-align:left;">A header to appear at the top of the display.</td></tr><tr><td style="text-align:left;"><code>visibility</code></td><td style="text-align:left;"><code>boolean</code> | <a href="./feature#visibility"><code>Visibility</code></a></td><td style="text-align:left;">Whether this cell should be visible.</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L196" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:196</a></p><hr><h3 id="gridoptions" tabindex="-1">GridOptions <a class="header-anchor" href="#gridoptions" aria-label="Permalink to &quot;GridOptions&quot;">​</a></h3><p>• <strong>GridOptions</strong>: <code>Object</code></p><p>An object that configures a <a href="./grid#grid">Grid</a>.</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cols</code></td><td style="text-align:left;"><a href="./../util/computed#computable"><code>Computable</code></a>&lt;<code>number</code>&gt;</td><td style="text-align:left;">The number of columns in the grid.</td></tr><tr><td style="text-align:left;"><code>getCanClick?</code></td><td style="text-align:left;"><a href="./grid#cellcomputable"><code>CellComputable</code></a>&lt;<code>boolean</code>&gt;</td><td style="text-align:left;">A computable to determine if a cell can be clicked.</td></tr><tr><td style="text-align:left;"><code>getClasses?</code></td><td style="text-align:left;"><a href="./grid#cellcomputable"><code>CellComputable</code></a>&lt;<a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type" target="_blank" rel="noreferrer"><code>Record</code></a>&lt;<code>string</code>, <code>boolean</code>&gt;&gt;</td><td style="text-align:left;">A computable to get the CSS classes for a cell.</td></tr><tr><td style="text-align:left;"><code>getDisplay</code></td><td style="text-align:left;"><a href="./grid#cellcomputable"><code>CellComputable</code></a>&lt;<a href="./feature#coercablecomponent"><code>CoercableComponent</code></a>&gt;</td><td style="text-align:left;">A computable to get the display component for a cell.</td></tr><tr><td style="text-align:left;"><code>getStartState</code></td><td style="text-align:left;"><a href="./../util/computed#computable"><code>Computable</code></a>&lt;<a href="./../game/persistence#state"><code>State</code></a>&gt; | (<code>id</code>: <code>string</code> | <code>number</code>) =&gt; <a href="./../game/persistence#state"><code>State</code></a></td><td style="text-align:left;">A computable to get the initial persistent state of a cell.</td></tr><tr><td style="text-align:left;"><code>getStyle?</code></td><td style="text-align:left;"><a href="./grid#cellcomputable"><code>CellComputable</code></a>&lt;<a href="./feature#stylevalue"><code>StyleValue</code></a>&gt;</td><td style="text-align:left;">A computable to get the CSS styles for a cell.</td></tr><tr><td style="text-align:left;"><code>getTitle?</code></td><td style="text-align:left;"><a href="./grid#cellcomputable"><code>CellComputable</code></a>&lt;<a href="./feature#coercablecomponent"><code>CoercableComponent</code></a>&gt;</td><td style="text-align:left;">A computable to get the title component for a cell.</td></tr><tr><td style="text-align:left;"><code>getVisibility?</code></td><td style="text-align:left;"><a href="./grid#cellcomputable"><code>CellComputable</code></a>&lt;<code>boolean</code> | <a href="./feature#visibility"><code>Visibility</code></a>&gt;</td><td style="text-align:left;">A computable to determine the visibility of a cell.</td></tr><tr><td style="text-align:left;"><code>onClick?</code></td><td style="text-align:left;">(<code>id</code>: <code>string</code> | <code>number</code>, <code>state</code>: <a href="./../game/persistence#state"><code>State</code></a>, <code>e?</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent" target="_blank" rel="noreferrer"><code>MouseEvent</code></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent" target="_blank" rel="noreferrer"><code>TouchEvent</code></a>) =&gt; <code>void</code></td><td style="text-align:left;">A function that is called when a cell is clicked.</td></tr><tr><td style="text-align:left;"><code>onHold?</code></td><td style="text-align:left;">(<code>id</code>: <code>string</code> | <code>number</code>, <code>state</code>: <a href="./../game/persistence#state"><code>State</code></a>) =&gt; <code>void</code></td><td style="text-align:left;">A function that is called when a cell is held down.</td></tr><tr><td style="text-align:left;"><code>rows</code></td><td style="text-align:left;"><a href="./../util/computed#computable"><code>Computable</code></a>&lt;<code>number</code>&gt;</td><td style="text-align:left;">The number of rows in the grid.</td></tr><tr><td style="text-align:left;"><code>visibility?</code></td><td style="text-align:left;"><a href="./../util/computed#computable"><code>Computable</code></a>&lt;<code>boolean</code> | <a href="./feature#visibility"><code>Visibility</code></a>&gt;</td><td style="text-align:left;">Whether this grid should be visible.</td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L224" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:224</a></p><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="cellcomputable" tabindex="-1">CellComputable <a class="header-anchor" href="#cellcomputable" aria-label="Permalink to &quot;CellComputable&quot;">​</a></h3><p>Ƭ <strong>CellComputable</strong>&lt;<code>T</code>&gt;: <a href="./../util/computed#computable"><code>Computable</code></a>&lt;<code>T</code>&gt; | (<code>id</code>: <code>string</code> | <code>number</code>, <code>state</code>: <a href="./../game/persistence#state"><code>State</code></a>) =&gt; <code>T</code></p><p>A type representing a computable value for a cell in the grid.</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L28" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:28</a></p><hr><h3 id="genericgrid" tabindex="-1">GenericGrid <a class="header-anchor" href="#genericgrid" aria-label="Permalink to &quot;GenericGrid&quot;">​</a></h3><p>Ƭ <strong>GenericGrid</strong>: <a href="./feature#replace"><code>Replace</code></a>&lt;<a href="./grid#grid"><code>Grid</code></a>&lt;<a href="./grid#gridoptions"><code>GridOptions</code></a>&gt;, { <code>getCanClick</code>: <a href="./../util/computed#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt; ; <code>getVisibility</code>: <a href="./../util/computed#processedcomputable"><code>ProcessedComputable</code></a>&lt;<a href="./feature#visibility"><code>Visibility</code></a> | <code>boolean</code>&gt; ; <code>visibility</code>: <a href="./../util/computed#processedcomputable"><code>ProcessedComputable</code></a>&lt;<a href="./feature#visibility"><code>Visibility</code></a> | <code>boolean</code>&gt; }&gt;</p><p>A type that matches any valid <a href="./grid#grid">Grid</a> object.</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L293" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:293</a></p><hr><h3 id="grid" tabindex="-1">Grid <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;Grid&quot;">​</a></h3><p>Ƭ <strong>Grid</strong>&lt;<code>T</code>&gt;: <a href="./feature#replace"><code>Replace</code></a>&lt;<code>T</code> &amp; <a href="./grid#basegrid"><code>BaseGrid</code></a>, { <code>cols</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;cols&quot;</code>]&gt; ; <code>getCanClick</code>: <a href="./../util/computed#getcomputabletypewithdefault"><code>GetComputableTypeWithDefault</code></a>&lt;<code>T</code>[<code>&quot;getCanClick&quot;</code>], <code>true</code>&gt; ; <code>getClasses</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;getClasses&quot;</code>]&gt; ; <code>getDisplay</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;getDisplay&quot;</code>]&gt; ; <code>getStartState</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;getStartState&quot;</code>]&gt; ; <code>getStyle</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;getStyle&quot;</code>]&gt; ; <code>getTitle</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;getTitle&quot;</code>]&gt; ; <code>getVisibility</code>: <a href="./../util/computed#getcomputabletypewithdefault"><code>GetComputableTypeWithDefault</code></a>&lt;<code>T</code>[<code>&quot;getVisibility&quot;</code>], <a href="./feature#visible"><code>Visible</code></a>&gt; ; <code>rows</code>: <a href="./../util/computed#getcomputabletype"><code>GetComputableType</code></a>&lt;<code>T</code>[<code>&quot;rows&quot;</code>]&gt; ; <code>visibility</code>: <a href="./../util/computed#getcomputabletypewithdefault"><code>GetComputableTypeWithDefault</code></a>&lt;<code>T</code>[<code>&quot;visibility&quot;</code>], <a href="./feature#visible"><code>Visible</code></a>&gt; }&gt;</p><p>An object that represents a feature that is a grid of cells that all behave according to the same rules.</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./grid#gridoptions"><code>GridOptions</code></a></td></tr></tbody></table><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L276" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:276</a></p><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="gridtype" tabindex="-1">GridType <a class="header-anchor" href="#gridtype" aria-label="Permalink to &quot;GridType&quot;">​</a></h3><p>• <code>Const</code> <strong>GridType</strong>: typeof <a href="./grid#gridtype"><code>GridType</code></a></p><p>A symbol used to identify <a href="./grid#grid">Grid</a> features.</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L25" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:25</a></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="creategrid" tabindex="-1">createGrid <a class="header-anchor" href="#creategrid" aria-label="Permalink to &quot;createGrid&quot;">​</a></h3><p>▸ <strong>createGrid</strong>&lt;<code>T</code>&gt;(<code>optionsFunc</code>): <a href="./grid#grid"><code>Grid</code></a>&lt;<code>T</code>&gt;</p><p>Lazily creates a grid with the given options.</p><h5 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./grid#gridoptions"><code>GridOptions</code></a></td></tr></tbody></table><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>optionsFunc</code></td><td style="text-align:left;"><a href="./feature#optionsfunc"><code>OptionsFunc</code></a>&lt;<code>T</code>, <a href="./grid#basegrid"><code>BaseGrid</code></a>, <a href="./grid#genericgrid"><code>GenericGrid</code></a>&gt;</td><td style="text-align:left;">Grid options.</td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><a href="./grid#grid"><code>Grid</code></a>&lt;<code>T</code>&gt;</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/8c0a0c4/src/features/grids/grid.ts#L306" target="_blank" rel="noreferrer">profectus/src/features/grids/grid.ts:306</a></p><h2 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h2><h3 id="gridcell-component" tabindex="-1">GridCell Component <a class="header-anchor" href="#gridcell-component" aria-label="Permalink to &quot;GridCell Component&quot;">​</a></h3><h4 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>visibility</code>*</td><td style="text-align:left;"><code>processedPropType&lt;Visibility | boolean&gt;(Number, Boolean)</code></td></tr><tr><td style="text-align:left;"><code>onClick</code></td><td style="text-align:left;"><code>(e?: MouseEvent | TouchEvent) =&gt; void</code></td></tr><tr><td style="text-align:left;"><code>onHold</code></td><td style="text-align:left;"><code>VoidFunction</code></td></tr><tr><td style="text-align:left;"><code>display</code>*</td><td style="text-align:left;"><code>processedPropType&lt;CoercableComponent&gt;(Object, String, Function)</code></td></tr><tr><td style="text-align:left;"><code>title</code></td><td style="text-align:left;"><code>processedPropType&lt;CoercableComponent&gt;(Object, String, Function)</code></td></tr><tr><td style="text-align:left;"><code>style</code></td><td style="text-align:left;"><code>processedPropType&lt;StyleValue&gt;(String, Object, Array)</code></td></tr><tr><td style="text-align:left;"><code>canClick</code>*</td><td style="text-align:left;"><code>processedPropType&lt;boolean&gt;(Boolean)</code></td></tr><tr><td style="text-align:left;"><code>id</code>*</td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h3 id="grid-component" tabindex="-1">Grid Component <a class="header-anchor" href="#grid-component" aria-label="Permalink to &quot;Grid Component&quot;">​</a></h3><h4 id="props-1" tabindex="-1">Props <a class="header-anchor" href="#props-1" aria-label="Permalink to &quot;Props&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>visibility</code>*</td><td style="text-align:left;"><code>processedPropType&lt;Visibility | boolean&gt;(Number, Boolean)</code></td></tr><tr><td style="text-align:left;"><code>rows</code>*</td><td style="text-align:left;"><code>processedPropType&lt;number&gt;(Number)</code></td></tr><tr><td style="text-align:left;"><code>cols</code>*</td><td style="text-align:left;"><code>processedPropType&lt;number&gt;(Number)</code></td></tr><tr><td style="text-align:left;"><code>cells</code>*</td><td style="text-align:left;"><code>processedPropType&lt;Record&lt;string, GridCell&gt;&gt;(Object)</code></td></tr></tbody></table>',71),r=[l];function c(i,s,n,g,f,h){return d(),t("div",null,r)}const y=e(a,[["render",c]]);export{u as __pageData,y as default};
