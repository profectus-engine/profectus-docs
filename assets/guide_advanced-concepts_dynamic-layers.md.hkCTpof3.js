import{_ as a,c as s,a0 as e,o as t}from"./chunks/framework.P9qPzDnn.js";const o=JSON.parse('{"title":"Dynamic Layers","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advanced-concepts/dynamic-layers.md","filePath":"guide/advanced-concepts/dynamic-layers.md","lastUpdated":1738331773000}'),n={name:"guide/advanced-concepts/dynamic-layers.md"};function l(h,i,r,p,k,y){return t(),s("div",null,i[0]||(i[0]=[e(`<h1 id="dynamic-layers" tabindex="-1">Dynamic Layers <a class="header-anchor" href="#dynamic-layers" aria-label="Permalink to &quot;Dynamic Layers&quot;">â€‹</a></h1><p>You can dynamically add and remove layers using the <a href="/api/game/layers/functions/addLayer">addLayer</a> and <a href="/api/game/layers/functions/removeLayer">removeLayer</a> functions. It&#39;s important to note that removing a layer does not affect the player&#39;s save data. You can safely add and remove the same layer without losing any progress. For instances where the structure of a layer changes, such as when adding a new feature, use the <a href="/api/game/layers/functions/reloadLayer">reloadLayer</a> function.</p><p>When procedurally generating layers with similar structures, consider using a utility function like the one below. This function allows you to access a correctly typed reference to a layer with a specified ID easily:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-palenight material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> getDynLayer</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#BABED8;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">id</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#FFCB6B;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">):</span><span style="--shiki-light:#FFCB6B;--shiki-dark:#FFCB6B;"> DynamicLayer</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">  const</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;"> layer</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;"> layers</span><span style="--shiki-light:#F07178;--shiki-dark:#F07178;">[</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">id</span><span style="--shiki-light:#F07178;--shiki-dark:#F07178;">]</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  if</span><span style="--shiki-light:#F07178;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">!</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;">layer</span><span style="--shiki-light:#F07178;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">throw</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">Layer does not exist</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#BABED8;--shiki-dark:#BABED8;"> layer</span><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> as</span><span style="--shiki-light:#FFCB6B;--shiki-dark:#FFCB6B;"> DynamicLayer</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>This utility function can streamline your code when dealing with multiple dynamic layers and ensure that you&#39;re working with the correct layer type.</p><p>When working with dynamic layers you&#39;ll need to ensure you can determine what layers should exist when loading a save file, by returning an accurate list from your project&#39;s <a href="/api/data/projEntry/functions/getInitialLayers">getInitialLayers</a> function.</p>`,6)]))}const c=a(n,[["render",l]]);export{o as __pageData,c as default};
