import{_ as e,c as o,o as c,a as d}from"./app.ab34650d.js";const f=JSON.parse('{"title":"Interface: BaseChallenge","description":"","frontmatter":{"editLink":false},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"[Component]","slug":"component"},{"level":3,"title":"[GatherProps]","slug":"gatherprops"},{"level":3,"title":"active","slug":"active"},{"level":3,"title":"complete","slug":"complete"},{"level":3,"title":"completed","slug":"completed"},{"level":3,"title":"completions","slug":"completions"},{"level":3,"title":"id","slug":"id"},{"level":3,"title":"maxed","slug":"maxed"},{"level":3,"title":"toggle","slug":"toggle"},{"level":3,"title":"type","slug":"type"}],"relativePath":"api/interfaces/features/challenges/challenge.BaseChallenge.md","lastUpdated":null}'),t={name:"api/interfaces/features/challenges/challenge.BaseChallenge.md"},a=d('<h1 id="interface-basechallenge" tabindex="-1">Interface: BaseChallenge <a class="header-anchor" href="#interface-basechallenge" aria-hidden="true">#</a></h1><p><a href="./../../../modules/features/challenges/challenge.html">features/challenges/challenge</a>.BaseChallenge</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="component" tabindex="-1">[Component] <a class="header-anchor" href="#component" aria-hidden="true">#</a></h3><p>\u2022 <strong>[Component]</strong>: <code>DefineComponent</code>&lt;{ <code>active</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>canComplete</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>canStart</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>classes</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>Record</code>&lt;<code>string</code>, <code>boolean</code>&gt;&gt;&gt; ; <code>completed</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>display</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>undefined</code> | <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> | { <code>description</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>effectDisplay?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>goal?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>reward?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>title?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> } | { <code>description</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>effectDisplay?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>goal?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>reward?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>title?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> }&gt;&gt; ; <code>id</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>StringConstructor</code> = String } ; <code>mark</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>string</code> | <code>boolean</code>&gt;&gt; ; <code>maxed</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>style</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<a href="./../../../modules/features/feature.html#stylevalue"><code>StyleValue</code></a>&gt;&gt; ; <code>toggle</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<code>VoidFunction</code>&gt; } ; <code>visibility</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<a href="../../../enums/features/feature.Visibility"><code>Visibility</code></a>&gt;&gt; } }, { <code>Visibility</code>: typeof <a href="../../../enums/features/feature.Visibility"><code>Visibility</code></a> ; <code>buttonText</code>: <code>ComputedRef</code>&lt;<code>&quot;Finish&quot;</code> | <code>&quot;Exit Early&quot;</code> | <code>&quot;Completed&quot;</code> | <code>&quot;Start&quot;</code>&gt; ; <code>comp</code>: <code>ShallowRef</code>&lt;<code>string</code> | <code>Component</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>ComputedOptions</code>, <code>MethodOptions</code>&gt;&gt; ; <code>notifyStyle</code>: <code>ComputedRef</code>&lt;{}&gt; ; <code>unref</code>: &lt;T&gt;(<code>ref</code>: <code>T</code> | <code>Ref</code>&lt;<code>T</code>&gt;) =&gt; <code>T</code> }, <code>unknown</code>, {}, {}, <code>ComponentOptionsMixin</code>, <code>ComponentOptionsMixin</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;, <code>string</code>, <code>PublicProps</code>, <code>Readonly</code>&lt;<code>ExtractPropTypes</code>&lt;{ <code>active</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>canComplete</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>canStart</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>classes</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>Record</code>&lt;<code>string</code>, <code>boolean</code>&gt;&gt;&gt; ; <code>completed</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>display</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>undefined</code> | <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> | { <code>description</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>effectDisplay?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>goal?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>reward?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>title?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> } | { <code>description</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>effectDisplay?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>goal?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>reward?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> ; <code>title?</code>: <a href="./../../../modules/features/feature.html#coercablecomponent"><code>CoercableComponent</code></a> }&gt;&gt; ; <code>id</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>StringConstructor</code> = String } ; <code>mark</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>string</code> | <code>boolean</code>&gt;&gt; ; <code>maxed</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<code>boolean</code>&gt;&gt; } ; <code>style</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<a href="./../../../modules/features/feature.html#stylevalue"><code>StyleValue</code></a>&gt;&gt; ; <code>toggle</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<code>VoidFunction</code>&gt; } ; <code>visibility</code>: { <code>required</code>: <code>true</code> = true; <code>type</code>: <code>PropType</code>&lt;<a href="./../../../modules/util/computed.html#processedcomputable"><code>ProcessedComputable</code></a>&lt;<a href="../../../enums/features/feature.Visibility"><code>Visibility</code></a>&gt;&gt; } }&gt;&gt;, {}&gt;</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L62" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:62</a></p><hr><h3 id="gatherprops" tabindex="-1">[GatherProps] <a class="header-anchor" href="#gatherprops" aria-hidden="true">#</a></h3><p>\u2022 <strong>[GatherProps]</strong>: () =&gt; <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><p>\u25B8 (): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h5><p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L63" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:63</a></p><hr><h3 id="active" tabindex="-1">active <a class="header-anchor" href="#active" aria-hidden="true">#</a></h3><p>\u2022 <strong>active</strong>: <a href="./../../../modules/game/persistence.html#persistent"><code>Persistent</code></a>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L58" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:58</a></p><hr><h3 id="complete" tabindex="-1">complete <a class="header-anchor" href="#complete" aria-hidden="true">#</a></h3><p>\u2022 <strong>complete</strong>: (<code>remainInChallenge?</code>: <code>boolean</code>) =&gt; <code>void</code></p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a></h4><p>\u25B8 (<code>remainInChallenge?</code>): <code>void</code></p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>remainInChallenge?</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h5><p><code>void</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L60" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:60</a></p><hr><h3 id="completed" tabindex="-1">completed <a class="header-anchor" href="#completed" aria-hidden="true">#</a></h3><p>\u2022 <strong>completed</strong>: <code>Ref</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L56" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:56</a></p><hr><h3 id="completions" tabindex="-1">completions <a class="header-anchor" href="#completions" aria-hidden="true">#</a></h3><p>\u2022 <strong>completions</strong>: <a href="./../../../modules/game/persistence.html#persistent"><code>Persistent</code></a>&lt;<a href="./../../../modules/lib/break_eternity.html#decimalsource"><code>DecimalSource</code></a>&gt;</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L55" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:55</a></p><hr><h3 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-hidden="true">#</a></h3><p>\u2022 <strong>id</strong>: <code>string</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L54" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:54</a></p><hr><h3 id="maxed" tabindex="-1">maxed <a class="header-anchor" href="#maxed" aria-hidden="true">#</a></h3><p>\u2022 <strong>maxed</strong>: <code>Ref</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L57" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:57</a></p><hr><h3 id="toggle" tabindex="-1">toggle <a class="header-anchor" href="#toggle" aria-hidden="true">#</a></h3><p>\u2022 <strong>toggle</strong>: <code>VoidFunction</code></p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L59" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:59</a></p><hr><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-hidden="true">#</a></h3><p>\u2022 <strong>type</strong>: typeof <a href="./../../../modules/features/challenges/challenge.html#challengetype"><code>ChallengeType</code></a></p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a></h4><p><a href="https://github.com/profectus-engine/Profectus/blob/5b3e6e3/src/features/challenges/challenge.tsx#L61" target="_blank" rel="noopener noreferrer">profectus/src/features/challenges/challenge.tsx:61</a></p>',62),r=[a];function l(n,s,i,h,p,u){return c(),o("div",null,r)}var g=e(t,[["render",l]]);export{f as __pageData,g as default};
